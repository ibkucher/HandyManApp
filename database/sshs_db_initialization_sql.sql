-- MySQL Script generated by Jaesoon Lee
-- Thu Oct 17 19:15:40 2019
-- Database of Smile Six Handyman Service

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Drop Schema sshs_db
-- -----------------------------------------------------
Drop DATABASE IF EXISTS `sshs_db`;

-- -----------------------------------------------------
-- Create Schema sshs_db
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `sshs_db` DEFAULT CHARACTER SET utf8 ;
USE `sshs_db` ;

-- -----------------------------------------------------
-- Table `sshs_db`.`user_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sshs_db`.`user_type` (
  `type_id` INT(1) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`type_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sshs_db`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sshs_db`.`user` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `user_name` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `user_type` INT(1) NOT NULL,
  PRIMARY KEY (`user_id`),
  INDEX `user_type_fk_idx` (`user_type` ASC) VISIBLE,
  CONSTRAINT `user_type_fk`
    FOREIGN KEY (`user_type`)
    REFERENCES `sshs_db`.`user_type` (`type_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sshs_db`.`handyman`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sshs_db`.`handyman` (
  `handyman_id` VARCHAR(5) NOT NULL,
  `user_id` INT NOT NULL,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NULL,
  `phone_num` VARCHAR(10) NULL,
  `work_avaliable_area` DOUBLE NULL,
  PRIMARY KEY (`handyman_id`),
  INDEX `user_id_fk_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `user_id_handyman_fk`
    FOREIGN KEY (`user_id`)
    REFERENCES `sshs_db`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sshs_db`.`service`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sshs_db`.`service` (
  `service_id` INT NOT NULL AUTO_INCREMENT,
  `service_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`service_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sshs_db`.`skill`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sshs_db`.`skill` (
  `skill_id` INT NOT NULL AUTO_INCREMENT,
  `service_id` INT NOT NULL,
  `skill_name` VARCHAR(45) NOT NULL,
  `skill_desc` VARCHAR(45) NULL,
  PRIMARY KEY (`skill_id`),
  INDEX `skill_service_id_fk_idx` (`service_id` ASC) VISIBLE,
  CONSTRAINT `skill_service_id_fk`
    FOREIGN KEY (`service_id`)
    REFERENCES `sshs_db`.`service` (`service_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sshs_db`.`handyman_ability`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sshs_db`.`handyman_ability` (
  `handyman_ability_id` INT NOT NULL AUTO_INCREMENT,
  `handyman_id` VARCHAR(5) NOT NULL,
  `ability_skill_id` INT NOT NULL,
  `skill_license_no` VARCHAR(45) NULL,
  `license_issued_date` DATETIME NULL,
  INDEX `category_id_fk_idx` (`ability_skill_id` ASC) VISIBLE,
  PRIMARY KEY (`handyman_ability_id`),
  CONSTRAINT `handyman_id_fk`
    FOREIGN KEY (`handyman_id`)
    REFERENCES `sshs_db`.`handyman` (`handyman_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `hanyman_skill_id_fk`
    FOREIGN KEY (`ability_skill_id`)
    REFERENCES `sshs_db`.`skill` (`skill_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sshs_db`.`customer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sshs_db`.`customer` (
  `customer_id` VARCHAR(5) NOT NULL,
  `user_id` INT NOT NULL,
  `first_name` VARCHAR(45) NULL,
  `last_name` VARCHAR(45) NULL,
  `phone_num` VARCHAR(10) NULL,
  PRIMARY KEY (`customer_id`),
  UNIQUE INDEX `user_id_UNIQUE` (`user_id` ASC) VISIBLE,
  CONSTRAINT `user_id_customer_fk`
    FOREIGN KEY (`user_id`)
    REFERENCES `sshs_db`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sshs_db`.`address`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sshs_db`.`address` (
  `address_id` INT NOT NULL AUTO_INCREMENT,
  `owner_id` VARCHAR(5) NOT NULL,
  `street` VARCHAR(50) NULL,
  `city` VARCHAR(20) NULL,
  `province` VARCHAR(2) NULL,
  `postal_code` VARCHAR(6) NULL,
  `used_address` VARCHAR(1) NULL,
  PRIMARY KEY (`address_id`, `owner_id`),
  INDEX `user_id_fk_idx` (`owner_id` ASC) VISIBLE,
  CONSTRAINT `owner_customer_id_fk`
    FOREIGN KEY (`owner_id`)
    REFERENCES `sshs_db`.`customer` (`customer_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `owner_handyman_id_fk`
    FOREIGN KEY (`owner_id`)
    REFERENCES `sshs_db`.`handyman` (`handyman_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sshs_db`.`request`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sshs_db`.`request` (
  `request_id` INT NOT NULL AUTO_INCREMENT,
  `customer_id` VARCHAR(5) NOT NULL,
  `request_date` DATETIME NOT NULL,
  `address_id` INT NOT NULL,
  `total_cost` DECIMAL ZEROFILL NULL,
  `request_status` VARCHAR(1) NULL,
  PRIMARY KEY (`request_id`),
  INDEX `customer_id_fk_idx` (`customer_id` ASC) VISIBLE,
  INDEX `adress_id_fk_idx` (`address_id` ASC) VISIBLE,
  CONSTRAINT `request_customer_id_fk`
    FOREIGN KEY (`customer_id`)
    REFERENCES `sshs_db`.`customer` (`customer_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `request_adress_id_fk`
    FOREIGN KEY (`address_id`)
    REFERENCES `sshs_db`.`address` (`address_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sshs_db`.`status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sshs_db`.`status` (
  `status_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`status_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sshs_db`.`request_detail`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sshs_db`.`request_detail` (
  `request_detail_id` INT NOT NULL AUTO_INCREMENT,
  `request_id` INT NOT NULL,
  `service_id` INT NOT NULL,
  `cost` DECIMAL ZEROFILL NULL,
  `handyman_id` VARCHAR(5) NULL,
  `request_staus_id` INT NULL,
  `expected_work_date` DATETIME NULL,
  `fixed_date` DATETIME NULL,
  PRIMARY KEY (`request_detail_id`, `request_id`),
  INDEX `request_id_fk_idx` (`request_id` ASC) VISIBLE,
  INDEX `service_id_fk_idx` (`service_id` ASC) VISIBLE,
  INDEX `request_status_id_fk_idx` (`request_staus_id` ASC) INVISIBLE,
  INDEX `handyman_id_fk_idx` (`handyman_id` ASC) VISIBLE,
  CONSTRAINT `request_id_fk`
    FOREIGN KEY (`request_id`)
    REFERENCES `sshs_db`.`request` (`request_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `request_service_id_fk`
    FOREIGN KEY (`service_id`)
    REFERENCES `sshs_db`.`service` (`service_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `request_status_id_fk`
    FOREIGN KEY (`request_staus_id`)
    REFERENCES `sshs_db`.`status` (`status_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `handyman_id_request_detail_fk`
    FOREIGN KEY (`handyman_id`)
    REFERENCES `sshs_db`.`handyman` (`handyman_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sshs_db`.`review`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sshs_db`.`review` (
  `review_id` INT NOT NULL AUTO_INCREMENT,
  `customer_id` VARCHAR(5) NOT NULL,
  `booking_detail_id` INT NULL,
  `rate_handyman` INT(1) ZEROFILL NULL,
  `rate_satisfied` INT(1) ZEROFILL NULL,
  `comment` VARCHAR(200) NULL,
  PRIMARY KEY (`review_id`),
  INDEX `review_id_fk_idx` (`booking_detail_id` ASC) VISIBLE,
  INDEX `customer_id_review_fk_idx` (`customer_id` ASC) VISIBLE,
  CONSTRAINT `review_id_fk`
    FOREIGN KEY (`booking_detail_id`)
    REFERENCES `sshs_db`.`request_detail` (`request_detail_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `customer_id_review_fk`
    FOREIGN KEY (`customer_id`)
    REFERENCES `sshs_db`.`customer` (`customer_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Triggers
-- -----------------------------------------------------
USE `sshs_db`;

DELIMITER $$
USE `sshs_db`$$
CREATE TABLE handyman_seq
(
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY
);
CREATE DEFINER = CURRENT_USER TRIGGER `sshs_db`.`handyman_BEFORE_INSERT` BEFORE INSERT ON `handyman` FOR EACH ROW
BEGIN
	INSERT INTO handyman_seq VALUES (NULL);
	SET NEW.handyman_id = CONCAT('H', LPAD(LAST_INSERT_ID(), 4, '0'));
END$$

USE `sshs_db`$$
CREATE TABLE customer_seq
(
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY
);
CREATE DEFINER = CURRENT_USER TRIGGER `sshs_db`.`customer_BEFORE_INSERT` BEFORE INSERT ON `customer` FOR EACH ROW
BEGIN
	INSERT INTO customer_seq VALUES (NULL);
	SET NEW.customer_id = CONCAT('O', LPAD(LAST_INSERT_ID(), 4, '0'));
END$$

DELIMITER ;

-- -----------------------------------------------------
-- Insert data
-- -----------------------------------------------------

-- user_type
insert into user_type(name) 
values 
	('HomeOwner'), 
    ('HandyMan');

-- user;
insert into user(user_name, password, email, user_type) 
values
	('ashley','h123','ashley@gmail.com',2),
	('james','h123','james@gmail.com',2),
    ('taylor','o123','taylor@gmail.com',1),
    ('hailey','o123','hailey@gmail.com',1);
    
-- handyman;
insert into handyman(user_id, first_name, last_name, phone_num) 
values
	(1,'Ashley', 'Freer', '6471234343'),
	(2,'James', 'Mcdonald', '6471234343');

-- customer;
insert into customer(user_id, first_name, last_name, phone_num) 
values
	(3, 'Taylor', 'Freer', '6474325464'),
    (4, 'Hailey', 'Adams', '6478734464');
    
-- address;    
insert into address(owner_id, street, city, province,postal_code, used_address)
values
	('H0001', '22 Rochman blvd', 'Scarborough', 'ON', 'M1H1S5', 'Y'),
    ('H0002', '34 Progress Ave', 'Scarborough', 'ON', 'M1H1S8', 'Y'),
    ('O0001', '30 Progress Ave', 'Scarborough', 'ON', 'M1H1S2', 'Y'),
    ('O0002', '35 Rochman blvd', 'Scarborough', 'ON', 'M1H1S6', 'Y');

-- service;
insert into service(service_name)
values
	('Electronics'),
    ('Plumbing');

-- skill;
insert into skill(service_id, skill_name, skill_desc)
values 
	(1, 'Electrician','Best Electrician in Ontario'),
	(2, 'Plumber', 'Best plumbing in Ontario');

insert into handyman_ability(handyman_id, ability_skill_id, skill_license_no, license_issued_date)
values
    ('H0001',1,'253-775050','2001-01-01'),
	('H0002',2,'454-000391','2008-01-01');

-- -----------------------------------------------------

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
